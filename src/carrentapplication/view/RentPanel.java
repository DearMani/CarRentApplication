/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package carrentapplication.view;

import carrentapplication.controller.CarRentController;
import carrentapplication.controller.CarTypeController;
import carrentapplication.controller.RentalDetailController;
import carrentapplication.controller.TimeHandleController;
import carrentapplication.dto.RentDetailDto;

import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


import java.util.ArrayList;
import java.util.Arrays;

import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import  javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

/**
 *
 * @author Manidu
 */
public class RentPanel extends javax.swing.JPanel {
    private TimeHandleController timeHandleController;
    private CarTypeController carTypeController;
    private  String userName;
  

    /**
     * Creates new form RentPanel
     * @param userName
     */
    public RentPanel(String userName) {
      
         timeHandleController =new TimeHandleController();
         carTypeController =new CarTypeController();
        initComponents();
        bodyPanel.setVisible(false);
        loadCarTypes();
        loadAllCars();
          this.userName =userName;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        carCategoryComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        filtercarTable = new javax.swing.JTable();
        carTypeTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        v_NoTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        toDateChooser = new com.toedter.calendar.JDateChooser();
        fromDateChooser = new com.toedter.calendar.JDateChooser();
        AvailabilityButton = new javax.swing.JButton();
        AvailableTextField = new javax.swing.JTextField();
        fromHourSpinField = new com.toedter.components.JSpinField();
        toHourSpinField = new com.toedter.components.JSpinField();
        bodyPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nicTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        remainTextField = new javax.swing.JTextField();
        advanceTextField = new javax.swing.JTextField();
        hourRateTextField = new javax.swing.JTextField();
        hourlyRateLable = new javax.swing.JLabel();
        dailyRateTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        ckeckButton = new javax.swing.JButton();
        filterButton = new javax.swing.JButton();
        placeCarButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setBackground(new java.awt.Color(102, 0, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Car Category");

        carCategoryComboBox1.setBackground(new java.awt.Color(255, 204, 204));
        carCategoryComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        carCategoryComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        carCategoryComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*" }));
        carCategoryComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carCategoryComboBox1ActionPerformed(evt);
            }
        });

        filtercarTable.setBackground(new java.awt.Color(255, 255, 204));
        filtercarTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        filtercarTable.setForeground(new java.awt.Color(0, 0, 0));
        filtercarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        filtercarTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtercarTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(filtercarTable);

        carTypeTextField.setBackground(new java.awt.Color(153, 0, 204));
        carTypeTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        carTypeTextField.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("V_NO");

        v_NoTextField.setBackground(new java.awt.Color(255, 204, 204));
        v_NoTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        v_NoTextField.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("To Date");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("From Date");

        toDateChooser.setBackground(new java.awt.Color(255, 153, 153));
        toDateChooser.setForeground(new java.awt.Color(0, 0, 0));

        fromDateChooser.setBackground(new java.awt.Color(255, 153, 153));
        fromDateChooser.setForeground(new java.awt.Color(0, 0, 0));

        AvailabilityButton.setBackground(new java.awt.Color(153, 0, 255));
        AvailabilityButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AvailabilityButton.setForeground(new java.awt.Color(0, 0, 0));
        AvailabilityButton.setText("Is Available");
        AvailabilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailabilityButtonActionPerformed(evt);
            }
        });

        AvailableTextField.setBackground(new java.awt.Color(255, 153, 153));
        AvailableTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AvailableTextField.setForeground(new java.awt.Color(0, 0, 0));

        fromHourSpinField.setBackground(new java.awt.Color(255, 153, 153));
        fromHourSpinField.setMaximum(23);
        fromHourSpinField.setMinimum(0);

        toHourSpinField.setBackground(new java.awt.Color(255, 153, 153));
        toHourSpinField.setMaximum(23);
        toHourSpinField.setMinimum(0);

        bodyPanel.setBackground(new java.awt.Color(255, 102, 102));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("NIC.No");

        nicTextField.setBackground(new java.awt.Color(102, 102, 255));
        nicTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nicTextField.setForeground(new java.awt.Color(0, 0, 0));
        nicTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Total");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Remain");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Advance");

        remainTextField.setBackground(new java.awt.Color(102, 102, 255));
        remainTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remainTextField.setForeground(new java.awt.Color(0, 0, 0));
        remainTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remainTextFieldActionPerformed(evt);
            }
        });

        advanceTextField.setBackground(new java.awt.Color(102, 102, 255));
        advanceTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        advanceTextField.setForeground(new java.awt.Color(0, 0, 0));
        advanceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanceTextFieldActionPerformed(evt);
            }
        });

        hourRateTextField.setBackground(new java.awt.Color(102, 102, 255));
        hourRateTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hourRateTextField.setForeground(new java.awt.Color(0, 0, 0));
        hourRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourRateTextFieldActionPerformed(evt);
            }
        });

        hourlyRateLable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hourlyRateLable.setForeground(new java.awt.Color(0, 0, 0));
        hourlyRateLable.setText("Hour Rate");

        dailyRateTextField.setBackground(new java.awt.Color(102, 102, 255));
        dailyRateTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dailyRateTextField.setForeground(new java.awt.Color(0, 0, 0));
        dailyRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyRateTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Daily Rate");

        totalTextField.setBackground(new java.awt.Color(102, 102, 255));
        totalTextField.setFont(new java.awt.Font("Tahoma", 1, 12));
        totalTextField.setForeground(new java.awt.Color(0, 0, 0));
        totalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTextFieldActionPerformed(evt);
            }
        });

        ckeckButton.setBackground(new java.awt.Color(153, 0, 255));
        ckeckButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ckeckButton.setForeground(new java.awt.Color(0, 0, 0));
        ckeckButton.setText("proceed");
        ckeckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckeckButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addComponent(hourlyRateLable, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hourRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dailyRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(remainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ckeckButton)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addComponent(advanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(dailyRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourlyRateLable, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(advanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(ckeckButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        filterButton.setBackground(new java.awt.Color(153, 0, 255));
        filterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        filterButton.setForeground(new java.awt.Color(0, 0, 0));
        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        placeCarButton.setBackground(new java.awt.Color(0, 153, 153));
        placeCarButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        placeCarButton.setForeground(new java.awt.Color(0, 0, 0));
        placeCarButton.setText("Place Car");
        placeCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeCarButtonActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(0, 0, 204));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Rent Up to Max  30 Days");

        jLabel11.setBackground(new java.awt.Color(0, 0, 204));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("from date is start  today and max up to 3 days");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AvailabilityButton))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(AvailableTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(toDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fromDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(v_NoTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(carTypeTextField)
                                        .addComponent(carCategoryComboBox1, 0, 93, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fromHourSpinField, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                            .addComponent(toHourSpinField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(filterButton)
                                        .addGap(40, 40, 40))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(90, 90, 90))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(placeCarButton)
                        .addGap(83, 83, 83))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carCategoryComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(v_NoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fromHourSpinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toHourSpinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AvailabilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AvailableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(placeCarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void carCategoryComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carCategoryComboBox1ActionPerformed
             carTypeTextField.setText(carCategoryComboBox1.getSelectedItem().toString());
    }//GEN-LAST:event_carCategoryComboBox1ActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        addToTable();
    }//GEN-LAST:event_filterButtonActionPerformed

    private void filtercarTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtercarTableMouseClicked
             Object value =filtercarTable.getValueAt(filtercarTable.getSelectedRow(), 0);
             v_NoTextField.setText(String.valueOf(value));
             dailyRateTextField.setText(String.valueOf(filtercarTable.getValueAt(filtercarTable.getSelectedRow(), 3)));
             hourRateTextField.setText(String.valueOf(filtercarTable.getValueAt(filtercarTable.getSelectedRow(), 4)));

    }//GEN-LAST:event_filtercarTableMouseClicked

    private void AvailabilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailabilityButtonActionPerformed
        try {
            Date fromDate = fromDateChooser.getDate();
            Date toDate = toDateChooser.getDate();
            int fromHour = (int) fromHourSpinField.getValue();
            int toHour = (int) toHourSpinField.getValue();            
            
            boolean isAvailable = isAvailable(fromDate, toDate, fromHour, toHour);
            AvailableTextField.setText((isAvailable) ? "Available" : "NotAvailable");
            if (isAvailable) {
               setDetailForBodyPanel(fromDate, toDate, fromHour, toHour);

            }  else{
                JOptionPane.showConfirmDialog(this, "Between that Time Slot car has been rented");
            }
            
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(this,ex.getMessage() );
        }
           
    }//GEN-LAST:event_AvailabilityButtonActionPerformed

    private void nicTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nicTextFieldActionPerformed

    private void remainTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remainTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remainTextFieldActionPerformed

    private void advanceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_advanceTextFieldActionPerformed

    private void hourRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourRateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourRateTextFieldActionPerformed

    private void dailyRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyRateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dailyRateTextFieldActionPerformed

    private void totalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTextFieldActionPerformed

    private void ckeckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckeckButtonActionPerformed
          
           try {
            Double total = Double.valueOf(totalTextField.getText());
            Double advance = Double.valueOf(advanceTextField.getText());
            Double remain = total - advance;
            remainTextField.setText(String.valueOf(remain));
        } catch (NumberFormatException numberFormatException) {
              JOptionPane.showConfirmDialog(this, numberFormatException.getMessage());
        }
    }//GEN-LAST:event_ckeckButtonActionPerformed

    private void placeCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeCarButtonActionPerformed
         placeCarRent();
    }//GEN-LAST:event_placeCarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AvailabilityButton;
    private javax.swing.JTextField AvailableTextField;
    private javax.swing.JTextField advanceTextField;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JComboBox<String> carCategoryComboBox1;
    private javax.swing.JTextField carTypeTextField;
    private javax.swing.JButton ckeckButton;
    private javax.swing.JTextField dailyRateTextField;
    private javax.swing.JButton filterButton;
    private javax.swing.JTable filtercarTable;
    private com.toedter.calendar.JDateChooser fromDateChooser;
    private com.toedter.components.JSpinField fromHourSpinField;
    private javax.swing.JTextField hourRateTextField;
    private javax.swing.JLabel hourlyRateLable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nicTextField;
    private javax.swing.JButton placeCarButton;
    private javax.swing.JTextField remainTextField;
    private com.toedter.calendar.JDateChooser toDateChooser;
    private com.toedter.components.JSpinField toHourSpinField;
    private javax.swing.JTextField totalTextField;
    private javax.swing.JTextField v_NoTextField;
    // End of variables declaration//GEN-END:variables

    
    
    
private void loadCarTypes(){
    try {
       
         List<String> carTypes =carTypeController.getCategories();
      //   jComboBox1.removeAllItems();
         for(String carType : carTypes){
                carCategoryComboBox1.addItem(carType);
         }
         
    } catch (Exception e) {
         JOptionPane.showConfirmDialog(this, e.getMessage());
    }
         
}

private void loadAllCars(){
          try {
          String columns[] ={"V_No","model","fuel","dailyRate","hourlyRate"};
      DefaultTableModel dtm =new DefaultTableModel(columns,0){
            @Override
            public boolean isCellEditable(int row, int column){
                     return false;
            }
      };
      
       filtercarTable.setModel(dtm);
         
     } catch (Exception e) {
         JOptionPane.showConfirmDialog(this, e.getMessage());
     }    
    
}

private void addToTable(){
    try {
          String carType =carTypeTextField.getText();
    ArrayList<Object[]> tabledata =carTypeController.getTableData(carType);
        DefaultTableModel dtm =   (DefaultTableModel) filtercarTable.getModel();
     for(Object[] rawdata : tabledata){
           System.out.println(Arrays.toString(rawdata));
            dtm.addRow(rawdata);
       }
      
    } catch (Exception e) {
         JOptionPane.showConfirmDialog(this, e.getMessage());
    }  
}


private boolean isAvailable(Date fromDate,Date toDate,Integer fromHour,Integer toHour) throws Exception {
       
        try {
            LocalDateTime fromLocalDateTime =timeHandleController.localDateTimeConverter(fromDate, fromHour);      
            LocalDateTime toLocalDateTime =timeHandleController.localDateTimeConverter(toDate, toHour);
            System.out.println(fromLocalDateTime);
              System.out.println(toLocalDateTime);

            RentalDetailController rentalDetailController = new RentalDetailController();
             boolean Available =rentalDetailController.checkAvailabilityTimeDuration(this.userName,v_NoTextField.getText(), fromLocalDateTime, toLocalDateTime);
             System.out.println(Available);
            return Available;
            
        } catch (Exception ex) {
              throw ex;
        }
             
}

private void setDetailForBodyPanel(Date fromDate,Date toDate,Integer fromHour,Integer toHour){
    
     try {
         bodyPanel.setVisible(true);
         Double dailyRate =Double.valueOf(dailyRateTextField.getText());
         Double hourlyRate =Double.valueOf(hourRateTextField.getText());
       
            long days =this.timeHandleController.calculateFullDaysBetween(
                    timeHandleController.localDateTimeConverter(fromDate, fromHour),
                        timeHandleController.localDateTimeConverter(toDate, toHour));
            
            long remainingHours =this.timeHandleController.calculateRemainingHours  ( 
                    timeHandleController.localDateTimeConverter(fromDate, fromHour),
                        timeHandleController.localDateTimeConverter(toDate, toHour));
            
            Double total =((days*dailyRate)+(remainingHours*hourlyRate));
      
            totalTextField.setText(String.valueOf(total));   
        } catch (Exception ex) {
            Logger.getLogger(RentPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
}

private void placeCarRent(){
   
    try {
        Date fromDate = fromDateChooser.getDate();
        Date toDate = toDateChooser.getDate();
        int fromHour = (int) fromHourSpinField.getValue();
        int toHour = (int) toHourSpinField.getValue();        
        LocalDateTime fromLocalDateTime = timeHandleController.localDateTimeConverter(fromDate, fromHour);        
        LocalDateTime toLocalDateTime = timeHandleController.localDateTimeConverter(toDate, toHour);
        
        RentDetailDto rentDetailDto = new RentDetailDto(v_NoTextField.getText(),
           fromLocalDateTime,
                toLocalDateTime,
                    nicTextField.getText(),
                Double.valueOf(totalTextField.getText()),
                Double.valueOf(advanceTextField.getText()),
                Double.valueOf(remainTextField.getText()));
        CarRentController carRentController =new CarRentController();
        String result =carRentController.rentCar(this.userName, rentDetailDto);
        JOptionPane.showConfirmDialog(this, result);
    } catch (Exception ex) {
        JOptionPane.showConfirmDialog(this, ex.getMessage());
    }
  
}




private void createRentDetailPDF(){
      
        try {
            // Create a page with custom width and height
            try (PDDocument document = new PDDocument()) {
                // Create a page with custom width and height
                PDPage page = new PDPage(new PDRectangle(600, 800));
                document.addPage(page);
                File fontFile =new File("C:\\Users\\Manidu\\Documents\\NetBeansProjects\\CarRentApplication\\src\\carrentapplication\\font\\Amatic-Bold.ttf");
                PDType0Font font =PDType0Font.load(document, fontFile);
                // Load the background image
                PDImageXObject backgroundImage = PDImageXObject.createFromFile("C:\\Users\\Manidu\\Documents\\NetBeansProjects\\CarRentApplication\\src\\carrentapplication\\images\\bacground.jpg", document);
                
                PDPageContentStream contentStream = new PDPageContentStream(document, page);
                
                // Draw the background image
                contentStream.drawImage(backgroundImage, 0, 0, 600, 800);
                
                contentStream.setFont(font, 40);
                contentStream.beginText();
                contentStream.newLineAtOffset(50, 700);
                contentStream.showText("Hellow World");
                contentStream.newLine();
                contentStream.showText("CAR rent application");
                contentStream.endText();
                contentStream.close();
                
                document.save("output.pdf");
            }
            System.out.println("PDF created successfully!");
        } catch (IOException e) {
            JOptionPane.showConfirmDialog(this, e.getMessage());
        }   
}

  
}
