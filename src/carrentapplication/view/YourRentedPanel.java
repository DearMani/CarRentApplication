/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package carrentapplication.view;

import carrentapplication.controller.RentalDetailController;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import  javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manidu
 */
public class YourRentedPanel extends javax.swing.JPanel {
      private  String userName;
      private RentalDetailController rentDetailController;
    /**
     * Creates new form YourRentedPanel
     * @param userName
     */
    public YourRentedPanel(String userName) {
        this.userName =userName;
        rentDetailController =new RentalDetailController();
        initComponents();
        loadAllRentdetails();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customeRentDetailTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        stateTextField = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        filterButton1 = new javax.swing.JButton();
        custIDTextField = new javax.swing.JTextField();
        rentTextField = new javax.swing.JTextField();
        advanceTextField = new javax.swing.JTextField();
        orderDetailIDTextField = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        customeRentDetailTable.setBackground(new java.awt.Color(153, 255, 153));
        customeRentDetailTable.setForeground(new java.awt.Color(0, 0, 0));
        customeRentDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        customeRentDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customeRentDetailTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customeRentDetailTable);

        jComboBox1.setBackground(new java.awt.Color(255, 51, 153));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rented", "Current" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        stateTextField.setBackground(new java.awt.Color(255, 102, 153));
        stateTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateTextFieldActionPerformed(evt);
            }
        });

        filterButton.setBackground(new java.awt.Color(153, 0, 255));
        filterButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filterButton.setForeground(new java.awt.Color(0, 0, 0));
        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        filterButton1.setBackground(new java.awt.Color(255, 255, 0));
        filterButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filterButton1.setForeground(new java.awt.Color(0, 0, 0));
        filterButton1.setText("Cancel Order");
        filterButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButton1ActionPerformed(evt);
            }
        });

        custIDTextField.setBackground(new java.awt.Color(255, 102, 153));
        custIDTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        custIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDTextFieldActionPerformed(evt);
            }
        });

        rentTextField.setBackground(new java.awt.Color(255, 102, 153));
        rentTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rentTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentTextFieldActionPerformed(evt);
            }
        });

        advanceTextField.setBackground(new java.awt.Color(255, 102, 153));
        advanceTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        advanceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanceTextFieldActionPerformed(evt);
            }
        });

        orderDetailIDTextField.setBackground(new java.awt.Color(255, 102, 153));
        orderDetailIDTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderDetailIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDetailIDTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderDetailIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(advanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(custIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filterButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filterButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(filterButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addGap(141, 141, 141))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(custIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(orderDetailIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(advanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void stateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateTextFieldActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
                
             SwingUtilities.invokeLater(() -> {
                 DefaultTableModel model =(DefaultTableModel)customeRentDetailTable.getModel();
                 model.setRowCount(0);
             });
             
             stateTextField.setText(jComboBox1.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
           addToTable();
    }//GEN-LAST:event_filterButtonActionPerformed

    private void filterButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButton1ActionPerformed
       cancelRent();
    }//GEN-LAST:event_filterButton1ActionPerformed

    private void custIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDTextFieldActionPerformed

    private void rentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rentTextFieldActionPerformed

    private void advanceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_advanceTextFieldActionPerformed

    private void orderDetailIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDetailIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderDetailIDTextFieldActionPerformed

    private void customeRentDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customeRentDetailTableMouseClicked
        custIDTextField.setText(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 0)));
          rentTextField.setText(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 1)));    
          orderDetailIDTextField.setText(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 2)));
         //  DateTimeFormatter formatter =DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S");
          // LocalDateTime fromDate =LocalDateTime.parse(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 4)), formatter);
          advanceTextField.setText((String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 8))));
    }//GEN-LAST:event_customeRentDetailTableMouseClicked

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField advanceTextField;
    private javax.swing.JTextField custIDTextField;
    private javax.swing.JTable customeRentDetailTable;
    private javax.swing.JButton filterButton;
    private javax.swing.JButton filterButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField orderDetailIDTextField;
    private javax.swing.JTextField rentTextField;
    private javax.swing.JTextField stateTextField;
    // End of variables declaration//GEN-END:variables

private void loadAllRentdetails(){
    String[] columns ={"custID","rentID","orderdetailID","model","fromDate","toDate","total","remain","advance","overdue"};
    DefaultTableModel dtm =new DefaultTableModel(columns,0){
            @Override
            public boolean isCellEditable(int row,int column){
                   return false;
            }     
        
    };
    customeRentDetailTable.setModel(dtm);
    
}

private void addToTable(){
    try {
          String state =stateTextField.getText();
    List<Object[]> tabledata =rentDetailController.getRentDetail(state, this.userName);
        DefaultTableModel dtm =   (DefaultTableModel) customeRentDetailTable.getModel();
     for(Object[] rawdata : tabledata){
           System.out.println(Arrays.toString(rawdata));
            dtm.addRow(rawdata);
       }
      
    } catch (Exception e) {
         JOptionPane.showConfirmDialog(this, e.getMessage());
    }  
}


private void cancelRent(){
     
    //  orderIDTextField.setText(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 2)));
      if(stateTextField.getText().equals("Current")){
          String custID =custIDTextField.getText();
          String rentID =rentTextField.getText();
          String orderDetailID =orderDetailIDTextField.getText();
           DateTimeFormatter formatter =DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S");
         //  LocalDateTime fromDate =LocalDateTime.parse(String.valueOf(customeRentDetailTable.getValueAt(customeRentDetailTable.getSelectedRow(), 4)), formatter);
           Double advance =Double.valueOf(advanceTextField.getText());
       
          String state =rentDetailController.CancelRent(custID, rentID, orderDetailID, advance);
          JOptionPane.showConfirmDialog(this, state);
          
      }  else{
             JOptionPane.showConfirmDialog(this, "allready rented done cannot cancel");
      }
 
}













}
