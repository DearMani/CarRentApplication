/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package carrentapplication.view;
import carrentapplication.controller.CarTypeController;
import carrentapplication.dto.CarCategoryDto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import  javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manidu
 */
public class CarTypePanel extends javax.swing.JPanel {
            private CarTypeController controller;
    /**
     * Creates new form CarTypePanel
     */
    public CarTypePanel() {
        initComponents();
        controller =new CarTypeController();
        clearText();
        loadAllCarTypes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTypeTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        rateLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        carTypeTextField = new javax.swing.JTextField();
        idTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        hourrateLabel = new javax.swing.JLabel();
        dailyrateTextField = new javax.swing.JTextField();
        hourlyrateTextField = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        carTypeTable.setBackground(new java.awt.Color(204, 255, 204));
        carTypeTable.setForeground(new java.awt.Color(0, 0, 0));
        carTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        carTypeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carTypeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(carTypeTable);

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        idLabel.setBackground(new java.awt.Color(255, 102, 102));
        idLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idLabel.setForeground(new java.awt.Color(0, 0, 0));
        idLabel.setText("Type ID");

        rateLabel.setBackground(new java.awt.Color(255, 102, 102));
        rateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rateLabel.setForeground(new java.awt.Color(0, 0, 0));
        rateLabel.setText("Daily Rate");

        typeLabel.setBackground(new java.awt.Color(255, 102, 102));
        typeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        typeLabel.setForeground(new java.awt.Color(0, 0, 0));
        typeLabel.setText("Car Type");

        carTypeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carTypeTextFieldActionPerformed(evt);
            }
        });

        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(153, 0, 255));
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 0, 0));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(153, 0, 255));
        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(0, 0, 0));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(153, 0, 255));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(0, 0, 0));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        hourrateLabel.setBackground(new java.awt.Color(255, 102, 102));
        hourrateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hourrateLabel.setForeground(new java.awt.Color(0, 0, 0));
        hourrateLabel.setText("Hourly Rate");

        dailyrateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyrateTextFieldActionPerformed(evt);
            }
        });

        hourlyrateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourlyrateTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hourrateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(hourlyrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dailyrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addGap(55, 55, 55))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(saveButton)
                    .addContainerGap(203, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dailyrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourlyrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourrateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton))
                .addGap(52, 52, 52))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(266, Short.MAX_VALUE)
                    .addComponent(saveButton)
                    .addGap(50, 50, 50)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void carTypeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carTypeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carTypeTextFieldActionPerformed

    private void hourlyrateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourlyrateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourlyrateTextFieldActionPerformed

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldActionPerformed

    private void dailyrateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyrateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dailyrateTextFieldActionPerformed

    private void carTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carTypeTableMouseClicked
        searchCarType();
    }//GEN-LAST:event_carTypeTableMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
       saveCarCategory();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
       updateCarCategory();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       deleteCarCategory();
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable carTypeTable;
    private javax.swing.JTextField carTypeTextField;
    private javax.swing.JTextField dailyrateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField hourlyrateTextField;
    private javax.swing.JLabel hourrateLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rateLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
 private void clearText(){
        idTextField.setText("");
        carTypeTextField.setText("");
        dailyrateTextField.setText("");
        hourlyrateTextField.setText("");
 }
 
 private void loadAllCarTypes(){
     
     try {
          String columns[] ={"id","type","daily rate","hourly rate"};
      DefaultTableModel dtm =new DefaultTableModel(columns,0){
            public boolean isCellEditable(int row, int column){
                     return false;
            }
      };
      
      carTypeTable.setModel(dtm);
      ArrayList<CarCategoryDto> customerdtoes =controller.getAllCarCategories();
      for(CarCategoryDto dto : customerdtoes){
             Object[] customerData ={dto.getId(),dto.getCarType(),dto.getDailyRate(),dto.getHourlyRate()};
              dtm.addRow(customerData);          
      }
         
         
     } catch (Exception e) {
         JOptionPane.showConfirmDialog(this, e.getMessage());
     }    

 }
 
     private void searchCarType(){
         try {
             String id =carTypeTable.getValueAt(carTypeTable.getSelectedRow(), 0).toString();
             CarCategoryDto dto =controller.getCarCategory(id);
             idTextField.setText(String.valueOf(dto.getId()));
             carTypeTextField.setText(dto.getCarType());
             dailyrateTextField.setText(String.valueOf(dto.getDailyRate()));
             hourlyrateTextField.setText(String.valueOf(dto.getHourlyRate()));
             
         } catch (Exception e) {
           JOptionPane.showConfirmDialog(this, e.getMessage());

         }
     } 
     
     private void saveCarCategory(){
         try {
             CarCategoryDto dto =new CarCategoryDto(carTypeTextField.getText(),
                     Double.valueOf(dailyrateTextField.getText()),
                     Double.valueOf(hourlyrateTextField.getText()));
             Integer id =controller.addCarCategory(dto);
             if(id>0){
                    JOptionPane.showConfirmDialog(this, "save sucessfully");
                    clearText();
                    loadAllCarTypes();
             }
             else{
                  JOptionPane.showConfirmDialog(this, "does not sucessfully");
             }
             
         } catch (Exception e) {
              JOptionPane.showConfirmDialog(this, e.getMessage());
             
         }
             
     }
     
     private void updateCarCategory(){
            try {
                 CarCategoryDto dto =new CarCategoryDto( Integer.valueOf(idTextField.getText()),
                         carTypeTextField.getText(),
                     Double.valueOf(dailyrateTextField.getText()),
                     Double.valueOf(hourlyrateTextField.getText()));
                 boolean result =controller.updateCarCategory(dto);
                  if(result){
                    JOptionPane.showConfirmDialog(this, "update sucessfully");
                     clearText();
                    loadAllCarTypes();
             }
             else{
                  JOptionPane.showConfirmDialog(this, "does not update ");
             }
                
         } catch (Exception e) {
                  JOptionPane.showConfirmDialog(this, e.getMessage());

         }
     }
     
     private void deleteCarCategory(){
         try {
             String id =idTextField.getText();
             boolean result =controller.deleteCarCategory(id);
             
                    if(result){
                    JOptionPane.showConfirmDialog(this, "delete sucessfully");
                      clearText();
                    loadAllCarTypes();
             }
             else{
                  JOptionPane.showConfirmDialog(this, "does not delete ");
             }
             
         } catch (Exception e) {
              JOptionPane.showConfirmDialog(this, e.getMessage());
         }
                
                
     }
     
     
 
 
//     try {
//                String custId = customerTable.getValueAt(customerTable.getSelectedRow(), 0).toString();
//                CustomerDto searchcustomerDto =customerController.getCustomer(custId);
//                idTextField.setText(String.valueOf(searchcustomerDto.getId()));
//                nameTextField1.setText(searchcustomerDto.getFirstName());
//                lastnameTextField.setText(searchcustomerDto.getLastName());
//                PhoneNumberTextField2.setText(searchcustomerDto.getPhoneNumber());
//                emailTextField.setText(searchcustomerDto.getEmail());
//                addressTextField.setText(searchcustomerDto.getAddress());
//                ageTextField.setText(String.valueOf(searchcustomerDto.getAge()));
//                genderTextField.setText(searchcustomerDto.getGenderType());
//                   
//                
//        } catch (Exception e) {
//               JOptionPane.showMessageDialog(this, e.getMessage());
//        }
 
 
 
 
//   try {
//            
//            String columns[] ={"Cust Id" ,"Cust Fname","Con_Num","Email","Address"};
//          DefaultTableModel dtm =new DefaultTableModel(columns,0){
//                @Override
//                 public boolean isCellEditable(int row, int column){
//                        return false;
//                 }
//          } ;
//          
//          customerTable.setModel(dtm);
//          ArrayList<CustomerDto> customerdtos =customerController.getAllCustomers();
//          
//          for(CustomerDto customerdto : customerdtos){
//                 Object[] customerData ={customerdto.getId(),customerdto.getFirstName(),customerdto.getPhoneNumber(),customerdto.getEmail(),customerdto.getAddress()};
//                 dtm.addRow(customerData);
//          }
//            
//        } catch (Exception e) {
//            
//        //    Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, e);
//              JOptionPane.showConfirmDialog(this, e.getMessage());
//        }










}
